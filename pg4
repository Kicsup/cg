#include<stdlib.h
>
#include<glut.h>
GLfloatvertices[][3]={{-1.0,-1.0,-1.0},{1.0,-1.0,-1.0},
{1.0,1.0,-1.0},{-1.0,1.0,-1.0},{-1.0,-1.0,1.0},
{1.0,-1.0,1.0},{1.0,1.0,1.0},{-1.0,1.0,1.0}};
Glfloatcolors[][3]={{0.0,0.0,0.0},{1.0,0.0,0.0},
{1.0,1.0,0.0},{0.0,1.0,0.0},{0.0,0.0,1.0},
{1.0,0.0,1.0},{1.0,1.0,1.0},{0.0,1.0,1.0}};
voidpolygon(inta,intb,intc,intd)
{
glBegin(GL_POLYGON);
glColor3fv(colors[a]);
glVertex3fv(vertices[a])
;glColor3fv(colors[b]);
glVertex3fv(vertices[b])
;glColor3fv(colors[c]);
glVertex3fv(vertices[c])
;glColor3fv(colors[d]);
glVertex3fv(vertices[d])
;
glEnd();
}
voidcolorcube()
{
polygon(0,3,2,1);
polygon(2,3,7,6);
polygon(0,4,7,3);
polygon(1,2,6,5);
polygon(4,5,6,7);
polygon(0,1,5,4);
}
staticGLfloat
theta[]={0.0,0.0,0.0};staticGLint
axis=2;
staticGLdoubleviewer[]={0.0,0.0,5.0};
voiddisplay(void)
{
glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
glLoadIdentity();
gluLookAt(viewer[0],
viewer[1],viewer[2],0.0,0.0,0.0,
glRotatef(theta[0],1.0,0.0,0.0);
glRotatef(theta[1],0.0,1.0,0.0);
glRotatef(theta[2],0.0,0.0,1.
0);colorcube();
glFlush();
glutSwapBuffers()
;
}
0.0,1.0,0.0);
voidmouse(intbtn,intstate,intx,inty)
{
if(btn==GLUT_LEFT_BUTTON&&state==GLUT_DOWN)axis=0;
if(btn==GLUT_MIDDLE_BUTTON&&state==GLUT_DOWN)axis=1;
if(btn==GLUT_RIGHT_BUTTON&&state==GLUT_DOWN)axis=2;
theta[axis]+=2.0;
if(theta[axis]>360.0)theta[axis]-
=360.0;display();
}
voidkeys(unsignedcharkey,intx,inty)
{
if(key=='x')viewer[0]-=1.0;
if(key=='X')viewer[0]+=1.0;
if(key=='y')viewer[1]-=1.0;
if(key=='Y')viewer[1]+=1.0;
if(key=='z')viewer[2]-=1.0;
if(key=='Z')viewer[2]+=1.0;
display();
}
voidmyReshape(intw,inth)
{
glViewport(0,0,w,h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
if(w<=h)
glFrustum(-2.0,2.0,-
2.0*(GLfloat)h/(GLfloat)w,
2.0*(GLfloat)h/(GLfloat)w,2.0,20.0);
else
glFrustum(-2.0,2.0,-2.0*(GLfloat)w/(GLfloat)h,
2.0*(GLfloat)w/(GLfloat)h,
2.0,20.0);glMatrixMode(GL_MODELVIEW);
}
voidmain(intargc,char**argv)
{
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB|GLUT_DEPTH);
glutInitWindowSize(500,500);
glutCreateWindow("Colorcube
Viewer");
glutReshapeFunc(myReshape);
glutDisplayFunc(display);
glutMouseFunc(mouse);
glutKeyboardFunc(keys);
glEnable(GL_DEPTH_TEST);
glutMainLoop();
}
