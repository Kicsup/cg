#include<GL/glut.h
>
#include<stdio.h>
intx,y;intrFlag=0;
voiddraw_pixel(floatx1,floaty1)
{
glColor3f(0.0,0.0,1.0)
;glPointSize(5.0);
glBegin(GL_POINTS);
glVertex2f(x1,y1);
glEnd();
}
voidtriangle()
{glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(100,100);
glVertex2f(250,400);
glVertex2f(400,100);
glEnd();}
floatth=0.0;
floattrX=0.0,trY=0.0;
voiddisplay()
{glClear(GL_COLOR_BUFFER_BIT);
glLoadIdentity();
if(rFlag==1)//RotateAroundorigin
{trX=0.0;trY=0.0;th+=0.1;draw_pixel(0.0,0.0);}
if(rFlag==2)//RotateAroundFixedPoint
{trX=x;trY=y;th+=0.1;draw_pixel(x,y);
}glTranslatef(trX,trY,0.0);
glRotatef(th,0.0,0.0,1.0);
glTranslatef(-trX,-trY,0.0);
triangle();
glutPostRedisplay();
glutSwapBuffers();
}
voidmyInit()
{glClearColor(0.0,0.0,0.0,1.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(-500.0,500.0,-500.0,500.0);
glMatrixMode(GL_MODELVIEW);
}
voidrotateMenu(intoption)
{if(option==1)
rFlag=1;if(option==2)
rFlag=2;if(option==3)
rFlag=3;
}
voidmain(intargc,char**argv)
{
printf("EnterFixedPoints(x,y)forRoration:
\n");scanf("%d%d",&x,&y);
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
glutInitWindowSize(500,500);
glutInitWindowPosition(0,0);
glutCreateWindow("CreateandRotate
Triangle");myInit();
glutDisplayFunc(display);
glutCreateMenu(rotateMenu);
glutAddMenuEntry("RotatearoundORIGIN",1);
glutAddMenuEntry("RotatearoundFIXED
POINT",2);glutAddMenuEntry("StopRotation",3);
glutAttachMenu(GLUT_RIGHT_BUTTON);
glutMainLoop();
}
